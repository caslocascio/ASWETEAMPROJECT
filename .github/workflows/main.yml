# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches:
      - 'psman1'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest --ignore="test_scraper.py"
    - name: Check test coverage
      run: |
        coverage run -m pytest --ignore="test_scraper.py"
        coverage report

  test-api:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Local Server
      run: |
        python evaluation.py &
    # Install Node on the runner
    - name: Install Node
      uses: actions/setup-node@v1
      with: 
        node-version: '12.x'
    
    # Install the newman command line utility and also install the html extra reporter
    - name: Install newman
      run: |
       npm install -g newman

    # Make directory to upload the test results
    - name: Make Directory for results
      run: mkdir -p testResultsKasim

    # Run the POSTMAN collection
    - name: Run POSTMAN collection
      run: |
        newman run ./PostmanCollections/class-finder.json

    # Upload the contents of Test Results directory to workspace
    - name: Output the run Details
      uses: actions/upload-artifact@v2
      with: 
       name: RunReports
       path: testResultsKasim  
